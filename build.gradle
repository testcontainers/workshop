plugins {
    id "java"
    id "org.springframework.boot" version "2.0.2.RELEASE"
}

apply plugin: 'io.spring.dependency-management'

repositories {
    jcenter()
}

sourceSets {
    acceptanceTest
}

configurations {
    acceptanceTestCompile.extendsFrom testCompile
    acceptanceTestRuntime.extendsFrom testRuntime
}

dependencyManagement {
    imports {
        mavenBom 'org.testcontainers:testcontainers-bom:1.11.2'
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-starter-data-redis'
    compile 'org.springframework.kafka:spring-kafka'

    compile 'org.postgresql:postgresql'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'io.rest-assured:rest-assured:3.1.0'
    testCompile 'org.testcontainers:postgresql'
    testCompile 'org.testcontainers:kafka'
    testCompile 'org.awaitility:awaitility:3.0.0'

    acceptanceTestCompile 'org.testcontainers:selenium'
    acceptanceTestCompile 'org.seleniumhq.selenium:selenium-java:3.13.0'

    testRuntime 'com.h2database:h2'
}

task acceptanceTest(type: Test) {
    testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
    classpath = sourceSets.acceptanceTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn acceptanceTest

bootJar {
    baseName = 'app'
}
sourceSets.acceptanceTest.resources.srcDir jar.outputs.files.singleFile.parentFile

test {
    environment "LOG_DATEFORMAT_PATTERN", "HH:mm:ss.SSS"
}
